<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>